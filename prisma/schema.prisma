// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String
  password String
  created_At DateTime? @default(now())
  updated_At DateTime? @default(now())
 
  @@map("users") //aqui é usado para dar o nome da tabela lá no banco pode ser visto no bekeeper
}

model Category{
  id String @id @default(uuid()) // o uuid é para auto incrementar o id desse model toda vez que é criado ele incrementa mais 1 no id para criar 1 diferente sempre.
  name String 
  created_At DateTime? @default(now())
  updated_At DateTime? @default(now())

  @@map("categories")
  products Product[]
}

model Product{

  id String @id @default(uuid())
  name String
  price String
  description String
  banner String
  created_At DateTime? @default(now())
  updated_At DateTime? @default(now())
  
  category Category @relation(fields: [category_id],references: [id])
  
  @@map("products")

  category_id String
  items Item[]
}

model Order {
  id String @id @default(uuid())
  table Int
  status Boolean @default(false)
  draft Boolean @default(true)
  name String?
  created_At DateTime? @default(now())
  updated_At DateTime? @default(now())

  items Item[]
  @@map("orders")
} 

model Item {
   id String @id @default(uuid())
   amount Int
 
   created_At DateTime? @default(now())
   updated_At DateTime? @default(now())

   order Order @relation(fields: [order_id],references: [id])
   product Product @relation(fields: [product_id],references: [id])
   @@map("items")

   order_id String
   product_id String
}